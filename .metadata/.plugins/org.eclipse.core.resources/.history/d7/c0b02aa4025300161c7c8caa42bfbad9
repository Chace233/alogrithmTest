package webcollector;

import cn.edu.hfut.dmic.webcollector.model.CrawlDatums;
import cn.edu.hfut.dmic.webcollector.model.Page;
import cn.edu.hfut.dmic.webcollector.plugin.berkeley.BreadthCrawler;
import cn.edu.hfut.dmic.webcollector.util.Config;
import cn.edu.hfut.dmic.webcollector.util.FileUtils;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.commons.lang3.StringUtils;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class DemoImageCrawler extends BreadthCrawler {
    //用于保存图片的文件夹
    File downloadDir;
    
    //用于生成文件名
    AtomicInteger imageId;
    String fileName="";
    
    /**
     * 
     * @param crawlPath 用于维护url的文件夹
     * @param downloadPath 用于保存图片的文件夹
     */
    public DemoImageCrawler(String crawlPath, String downloadPath) {
        super(crawlPath, true);
        downloadDir = new File(downloadPath);
        if(!downloadDir.exists()){
            downloadDir.mkdirs();
        }
       computeImageId();
    }

    @Override
    public void visit(Page page, CrawlDatums next) {
        //根据http头重的Content-Type信息来判断当前资源是网页还是图片
        String contentType = page.getResponse().getContentType();
        if(contentType==null){
            return;
        }else if (contentType.contains("html")) {
            //如果是网页，则抽取其中包含图片的url，放入后续任务
            Elements imgs = page.select("div[class=list1_detail2] p img");
            for (Element img : imgs) {
                String imgSrc = img.attr("abs:src");
                
                //System.out.println("图片地址："+imgSrc);
                next.add(imgSrc);
                fileName = StringUtils.substringAfterLast(imgSrc, "/");
            }
            
        } else if (contentType.startsWith("image")) {
            //如果是图片，直接下载
            String extensionName=contentType.split("/")[1];
            String imageFileName=fileName+"."+extensionName;
            File imageFile=new File(downloadDir,imageFileName);
            try {
                FileUtils.writeFile(imageFile, page.getContent());               
                System.out.println("保存图片"+fileName+"到 "+imageFile.getAbsolutePath());
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        }
    }

    public static void main(String[] args) throws Exception {
        DemoImageCrawler demoImageCrawler = new DemoImageCrawler("crawl", "download");

        demoImageCrawler.addSeed("http://www.xincailiao.com/html/weizixun");
        //demoImageCrawler.addSeed("http://36kr.com");
        demoImageCrawler.addRegex("http://www.xincailiao.com/html/weizixun/.*");
        //demoImageCrawler.addRegex("http://36kr.com/p/.*html");
        //demoImageCrawler.setResumable(true);
        demoImageCrawler.setThreads(30);
        Config.MAX_RECEIVE_SIZE = 1000 * 1000 * 10;
        demoImageCrawler.start(3);
    }
    
   public void computeImageId(){
        int maxId=-1;
        for(File imageFile:downloadDir.listFiles()){
            String fileName=imageFile.getName();
            String idStr=fileName.split("\\.")[0];
            int id=Integer.valueOf(idStr);
            if(id>maxId){
                maxId=id;
            }
        }
        imageId=new AtomicInteger(maxId);
    }
}
