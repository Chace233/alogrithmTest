package other;

import java.util.Scanner;

public class Knapsack {
	public static int[][] knapsackProblem (int n, int m, int[] w, int[] p) {
		int[][] c = new int[n][m+1]; //c[i][m]表示前i个物品恰放入一个重量为m的背包中可获得最大的价值量
		int i, j;
		for (i = 0; i < n; i++) {
			c[i][0] = 0;
		}
		for (j = 0; j < m; j++) {
			c[0][j] = 0;
		}
		
		for (i = 1; i < n+1; i++) {
			for (j = 0; j < m+1; j++) {
				if (w[i] <= j) {
					if (c[i-1][w[i]] < c[i-1][j-w[i]]+p[i]) {
						c[i][j] = c[i-1][j-w[i]] + p[i];
					}else {
						c[i][j] = c[i-1][j-w[i]];
					}
				} else {
					c[i][j] = c[i-1][j];
				}
			}
		}
		return c;
	}
	
	public static void printKnapsack (int n, int m, int[][] c) {
		int[] k = new int[n];
		for (int i = 1; i <= n; i++) {
			if (c[i][m] > c[i-1][m]) {
				k[i-1] = 1;
			} else {
				k[i-1] = 0;
			}
		}
		
		for (int i = 0; i < n; i++){
			System.out.print(k[i] + "  ");
		}
	}
	
	public static void main (String[] args) {
		int n = 0, m = 0;
		Scanner in = new Scanner(System.in);
		n = in.nextInt();
		m = in.nextInt();
		int[] w = new int[n];
		int[] p = new int[n];
		for (int i = 0; i < n; i++) {
			w[i] = in.nextInt();
			p[i] = in.nextInt();
		}
		int[][] c = Knapsack.knapsackProblem(n, m, w, p);
		Knapsack.printKnapsack(n, m, c);
	}
}
